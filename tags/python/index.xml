<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Crafeeee&#39;s</title>
    <link>https://swleeeeee.github.io/Crafeeee/tags/python/</link>
    <description>Recent content in Python on Crafeeee&#39;s</description>
    <generator>Hugo</generator>
    <language>en-us,zh-cn</language>
    <lastBuildDate>Fri, 01 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://swleeeeee.github.io/Crafeeee/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Universal PBC node-Matching abaqus script</title>
      <link>https://swleeeeee.github.io/Crafeeee/posts/pbc/</link>
      <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://swleeeeee.github.io/Crafeeee/posts/pbc/</guid>
      <description>&lt;h1 id=&#34;traits&#34;&gt;Traits&lt;/h1&gt;&#xA;&lt;p&gt;Specially designed for TPMS&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Automatically adapt to the constraint type of dian/bian/mian,&lt;/li&gt;&#xA;&lt;li&gt;no need to manually select set REALIZE THE AUTOMATION OF MIAN, DIAN, AND BIAN SETTINGS&lt;/li&gt;&#xA;&lt;li&gt;Solid/shell type support is supported in cases&lt;/li&gt;&#xA;&lt;li&gt;faces, edges, and points can be incomplete&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#--------------------------------------------------------------------------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#--------------------Applying the periodic boundary conditions-------------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#The script is run in the Abaqus CAE interface not command&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Tol parameter should be smaller than the element size.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Input file of Abaqus should be provided to the script&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Notice that Partname/instancename/node sets should be assigned with the &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#following indicated name, e.g. Part-1,Part1-1,MIANX&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Make sure that the model with vertices have one of them on the corner&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-----------------Written by Guodong Fang, 12/03/2015, in Bristol----------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-------------Modified by Yuqin Xiao ,10/24/2024 ,in ZheJiang--------------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#--------------------------------------------------------------------------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-----------Contact me for the source code---------------------------------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;theory&#34;&gt;Theory&lt;/h1&gt;&#xA;&lt;p&gt;pending&lt;/p&gt;</description>
    </item>
    <item>
      <title>TPMS periodic single-cell integration simulation</title>
      <link>https://swleeeeee.github.io/Crafeeee/posts/11-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://swleeeeee.github.io/Crafeeee/posts/11-7/</guid>
      <description>&lt;p&gt;&lt;em&gt;1.模型生成(mathematica)&lt;/em&gt;&#xA;模型方程参考&lt;a href=&#34;https://mp.weixin.qq.com/s/J1FIr99urkgp4c92-9rIRA&#34;&gt;https://mp.weixin.qq.com/s/J1FIr99urkgp4c92-9rIRA&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Gyroid&#xA;方程：sin(x) cos(y) + sin(y) cos(z) + sin(z) cos(x)&lt;/li&gt;&#xA;&lt;li&gt;Schwarz (Primitive)&#xA;方程：cos(x)+cos(y)+cos(z)&lt;/li&gt;&#xA;&lt;li&gt;Diamond&#xA;方程：sin(x)*sin(y)*sin(z)+sin(x)*cos(y)*cos(z)+cos(x)*sin(y)*cos(z)+cos(x)*cos(y)*sin(z)&lt;/li&gt;&#xA;&lt;li&gt;Lidinoid&#xA;方程：sin(2&lt;em&gt;x) * cos(y) * sin(z) + sin(2&lt;/em&gt;y) * cos(z) * sin(x) + sin(2&lt;em&gt;z) * cos(x) * sin(y) - cos(2&lt;/em&gt;x) * cos(2&lt;em&gt;y) - cos(2&lt;/em&gt;y) * cos(2&lt;em&gt;z) - cos(2&lt;/em&gt;z) * cos(2*x) + 0.3&lt;/li&gt;&#xA;&lt;li&gt;Split P&#xA;方程：1.1*(sin(2&lt;em&gt;x)&lt;em&gt;sin(z)&lt;em&gt;cos(y)+sin(2&lt;/em&gt;y)&lt;em&gt;sin(x)&lt;em&gt;cos(z)+sin(2&lt;/em&gt;z)&lt;em&gt;sin(y)&lt;em&gt;cos(x))-0.2&lt;/em&gt;(cos(2&lt;/em&gt;x)&lt;em&gt;cos(2&lt;/em&gt;y)+cos(2&lt;/em&gt;y)&lt;em&gt;cos(2&lt;/em&gt;z)+cos(2&lt;/em&gt;z)&lt;em&gt;cos(2&lt;/em&gt;x))-0.4&lt;/em&gt;(cos(2&lt;em&gt;x) + cos(2&lt;/em&gt;y) +cos(2*z))&lt;/li&gt;&#xA;&lt;li&gt;Neovius&#xA;方程：3*(cos(x)+cos(y)+cos(z))+4*cos(x)*cos(y)*cos(z)&lt;/li&gt;&#xA;&lt;li&gt;IWP&#xA;方程：2 (Cos[Pi/10 x] Cos[Pi/10 y] + Cos[Pi/10 y] Cos[Pi/10 z] + Cos[Pi/10 z] Cos[Pi/10 x]) - (Cos[Pi/5 x] + Cos[Pi/5 y] +Cos[Pi/5 z])&lt;/li&gt;&#xA;&lt;li&gt;Gyroid&#xA;方程：Sin[Pi/10 x] Cos[Pi/10 y] + Sin[Pi/10 y] Cos[Pi/10 z] + Sin[Pi/10 z] Cos[Pi/10 x]&lt;/li&gt;&#xA;&lt;li&gt;FRD&#xA;方程：4cos (x) cos (y) cos (z)-[cos (x) cos (2y)+ cos (2x) cos (2z)+ cos (2y) cos (2z)]&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这里以Dimond模型为例子展示实现方法：&#xA;Shell type:&#xA;&lt;img src=&#34;../pic/11-7-1.jpg&#34; alt=&#34;&#34;&gt;&#xA;Solid type:&#xA;&lt;img src=&#34;../pic/11-7-2.jpg&#34; alt=&#34;&#34;&gt;&#xA;Sandwich type:&#xA;&lt;img src=&#34;../pic/11-7-3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
